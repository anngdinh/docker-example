version: '2.1'

services:
  coroot:
    image: ghcr.io/coroot/coroot
    container_name: coroot
    ports:
    - "8080:8080"
    environment:
      BOOTSTRAP_CLICKHOUSE_ADDRESS: "clickhouse:9000"
      BOOTSTRAP_CLICKHOUSE_USER: "annd2"
      BOOTSTRAP_CLICKHOUSE_PASSWORD: "password"
      BOOTSTRAP_CLICKHOUSE_DATABASE: "otel"
      BOOTSTRAP_CLICKHOUSE_TRACES_TABLE: "otel_traces"
    
  coroot-node-agent:
    privileged: true
    pid: host
    image: ghcr.io/coroot/coroot-node-agent
    container_name: exporter
    restart: unless-stopped
    expose:
      - 80
    environment:
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel:4318/v1/traces"
    ports:
      - "8888:80"
    volumes:
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug:rw
    command: --cgroupfs-root=/host/sys/fs/cgroup
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: always
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  otel:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel
    volumes:
      - ./otel/config.yaml:/etc/otel-config.yaml
    command:
      - --config=/etc/otel-config.yaml
    # ports:
    #   - 55678:55678
    restart: always
  
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
      - "9009:9009"
    environment:
      - CLICKHOUSE_USER=annd2
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=password
      # CLICKHOUSE_ADMIN_USER: "annd2"
      # CLICKHOUSE_ADMIN_PASSWORD: "password"
      # ALLOW_EMPTY_PASSWORD: yes
    restart: always
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    # volumes:
    #   - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    # command: --query.ui-config /etc/jaeger/jaeger-ui.json
    # environment:
    #   - METRICS_STORAGE_TYPE=prometheus
    #   - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - 16686:16686
      - 14269:14269 # http://localhost:14269/metrics
    restart: always
  
  intake:
    image: annd2/test-db:1.0.0
    container_name: intake
    restart: always
    environment:
      URL: 'root:password@tcp(mysql:3306)/mysql'
      QUERY: 'SELECT User FROM user'
    depends_on:
      - mysql
  
  mysql:
    image: mysql:latest
    container_name: mysql
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=root
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - '3306:3306'

